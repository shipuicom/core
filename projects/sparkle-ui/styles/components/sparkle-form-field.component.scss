$sparkleFormField: false !default;

@if $sparkleFormField == true {
  spk-form-field {
    --spk-input-height: #{p2r(40)};
    --spk-input-shape: var(--shape-2);
    --spk-input-border-color: var(--base-level-40);
    --spk-input-prefix-bg: var(--base-level-20);
    --spk-input-icon-color: var(--base-level-60);
    --spk-input-background-color: var(--base-level-10);

    display: flex;
    flex-direction: column;
    position: relative;

    &[read-only],
    &[read-only='true'],
    &[readonly='true'],
    &[readonly],
    &.readonly,
    &[disabled],
    &[disabled='true'],
    &.disabled,
    &:has(input[disabled]),
    &:has(textarea[disabled]),
    &:has(textarea[disabled='true']),
    &:has(input[disabled='true']) {
      pointer-events: none;
      user-select: none;
      opacity: 0.5;
    }

    &.small {
      --spk-input-height: #{p2r(32)};
    }

    label {
      display: flex;
      align-items: center;
      padding-bottom: p2r(4);
      gap: p2r(4);

      spk-icon {
        font-size: p2r(16);
      }
    }

    .prefix {
      display: none;
      align-items: center;
      gap: p2r(4);
      background-color: var(--spk-input-prefix-bg);
      padding: p2r(0 12);
      height: 100%;
      transition: background-color 125ms linear;

      [spkPrefix] + [spkTextPrefix] {
        margin-left: p2r(4);
      }
    }

    .prefix-spacer,
    .suffix-spacer {
      width: 0;
      height: 100%;
    }

    &:not(:has(.helpers .error:empty)) {
      --spk-input-icon-color: var(--warn-500);
      --spk-input-border-color: var(--warn-500);
      --spk-input-prefix-bg: var(--warn-level-20);
    }

    .input-wrap {
      display: flex;
      align-items: center;
      border: 1px solid var(--spk-input-border-color);
      border-radius: var(--spk-input-shape);
      background: var(--spk-input-background-color);
      padding: p2r(0 12);
      height: var(--spk-input-height);
      overflow: hidden;
      transition: border-color 125ms linear;

      .input {
        flex: 1 0;
      }

      textarea {
        resize: none;
        margin: p2r(8 0);
        color: var(--base-level-60);
        field-sizing: content;
      }

      &:has(textarea) {
        height: auto;
        min-height: var(--spk-input-height);
      }

      spk-icon {
        color: var(--spk-input-icon-color);
        transition: color 125ms linear;
      }

      textarea,
      input {
        appearance: none;
        border: 0;
        padding: 0;
        background: transparent;
        font: var(--paragraph-30B);
        flex: 1 0;
        color: var(--base-level-60);

        &::placeholder {
          color: var(--base-level-60R);
        }

        &:focus {
          outline: none;
        }

        &[type='number'] {
          appearance: textfield;
          text-align: right;

          &::-webkit-outer-spin-button,
          &::-webkit-inner-spin-button {
            display: none;
          }
        }
      }

      &:has([spkSuffix]) {
        .suffix-spacer {
          width: p2r(8);
        }
      }

      &:has([spkPrefix]),
      &:has([spkTextPrefix]) {
        padding: p2r(0 12 0 0);

        .prefix {
          display: flex;
        }

        .prefix-spacer {
          width: p2r(8);
        }
      }
    }

    .helpers {
      height: p2r(20);
      display: flex;
      align-items: center;
      gap: p2r(4);
      padding-top: p2r(4);

      &:has(.error:empty):has(.hint:empty) {
        height: 0;
        padding-top: 0;
      }

      &:not(:has(.error:empty)) {
        .hint {
          opacity: 0;
          visibility: hidden;
        }
      }

      [spkHint] {
        color: var(--base-level-60R);

        &[suffix] {
          justify-self: flex-end;
        }
      }
    }

    .hint {
      display: flex;
      align-items: center;
      justify-content: space-between;
      width: 100%;
      color: var(--base-level-60R);
      opacity: 1;
      transition:
        visibility 125ms linear,
        opacity 125ms linear;
      visibility: visible;

      &:empty {
        opacity: 0;
        // visibility: hidden;
      }
    }

    .error {
      color: var(--warn-500);
      opacity: 1;
      transition: opacity 125ms linear;
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      width: 100%;

      &:empty {
        opacity: 0;
        // visibility: hidden;
      }
    }
  }
}
